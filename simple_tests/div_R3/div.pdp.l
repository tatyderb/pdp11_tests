000000:		; expected:
000000:		; r0=000202 r2=000000 r4=003477 sp=000000
000000:		; r1=000000 r3=143365 r5=143365 pc=001016
000000:		; psw=000001: cm=k pm=k pri=0      c [6]
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; Реализовать команду div 
000000:		; Двоичный код: 0 111 001 rrr sss sss
000000:		; Формат ассемблера: div src, reg
000000:		; 32-битное содержимое регистров [reg, reg|1] (reg - старшие биты) 
000000:		; делится на содержимое источника src, 
000000:		; частное остается в reg, а остаток в reg|1.
000000:		; Если номер регистра reg нечетный (то есть reg == reg|1), то 
000000:		; деление не выполняется и устанавливается бит V
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; Это можно НЕ реализовывать:
000000:		; Остаток имеет тот же знак, что и делимое, 
000000:		; то есть -7 / 2 = -4 и 1 в остатке
000000:		; то есть 7 / -2 = -3 и -1 в остатке
000000:		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
000000:		; От умножения теоретического обоснование тестов
000000:		; Тест 0
000000:		; 123 * 456 = 60 752
000000:		; Тест 1 - реализован
000000:		; 12345 * 54321 = 717743365
000000:		; bin: 111001111111100011011110101
000000:		; bin: 0 000 011 100 111 111 % 1 100 011 011 110 101
000000:		; oct: 0   0   3   4   7   7   1   4   3   3   6   5
000000:		; Тест 1 - реализован
000000:		; 12345 * 54321 = 717743365
000000:		; 12345 * 54321 + 1357 = 717743365 + 1357 = 717744744
000000:		; bin: 111001111111100100111100100
000000:		; bin:        11 100 111 111 % 1 100 100 111 100 100
000000:		; oct: 0   0   3   4   7   7   1   4   4   7   4   4
000000:		
000000:		
000000:		    .=200
000200:		A:  .WORD  3477,  144744, 12345
	 003477
	 144744
	 012345
000206:		
000206:		    .=1000
001000:		    mov #A, R0      ; R0 = 200
	 012700
	 000200
001004:		    mov (R0)+, R2   ; R2 = 3477
	 012002
001006:		    mov (R0)+, R3   ; R3 = 144744
	 012003
001010:		    
001010:		    div (R0), R3    ; R2 = 54321, R3 = 1357
	 071310
001012:		    
001012:		    halt
	 000000
